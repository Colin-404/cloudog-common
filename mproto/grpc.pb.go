// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: grpc.proto

package mproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RawData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawData) Reset() {
	*x = RawData{}
	mi := &file_grpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawData) ProtoMessage() {}

func (x *RawData) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawData.ProtoReflect.Descriptor instead.
func (*RawData) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *RawData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RawData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RawData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RawData       *RawData               `protobuf:"bytes,1,opt,name=RawData,proto3" json:"RawData,omitempty"`
	AgentID       string                 `protobuf:"bytes,2,opt,name=AgentID,proto3" json:"AgentID,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	PublicIPv4    []string               `protobuf:"bytes,4,rep,name=PublicIPv4,proto3" json:"PublicIPv4,omitempty"`
	PrivateIPv4   []string               `protobuf:"bytes,5,rep,name=PrivateIPv4,proto3" json:"PrivateIPv4,omitempty"`
	PublicIPv6    []string               `protobuf:"bytes,6,rep,name=PublicIPv6,proto3" json:"PublicIPv6,omitempty"`
	PrivateIPv6   []string               `protobuf:"bytes,7,rep,name=PrivateIPv6,proto3" json:"PrivateIPv6,omitempty"`
	Hostname      string                 `protobuf:"bytes,8,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Version       string                 `protobuf:"bytes,9,opt,name=Version,proto3" json:"Version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_grpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *Record) GetRawData() *RawData {
	if x != nil {
		return x.RawData
	}
	return nil
}

func (x *Record) GetAgentID() string {
	if x != nil {
		return x.AgentID
	}
	return ""
}

func (x *Record) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Record) GetPublicIPv4() []string {
	if x != nil {
		return x.PublicIPv4
	}
	return nil
}

func (x *Record) GetPrivateIPv4() []string {
	if x != nil {
		return x.PrivateIPv4
	}
	return nil
}

func (x *Record) GetPublicIPv6() []string {
	if x != nil {
		return x.PublicIPv6
	}
	return nil
}

func (x *Record) GetPrivateIPv6() []string {
	if x != nil {
		return x.PrivateIPv6
	}
	return nil
}

func (x *Record) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Record) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Params        map[string]string      `protobuf:"bytes,4,rep,name=Params,proto3" json:"Params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_grpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Task) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_grpc_proto protoreflect.FileDescriptor

const file_grpc_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"grpc.proto\x12\x06mproto\"O\n" +
	"\aRawData\x12\x12\n" +
	"\x04Type\x18\x01 \x01(\x05R\x04Type\x12\x1c\n" +
	"\tTimestamp\x18\x02 \x01(\x03R\tTimestamp\x12\x12\n" +
	"\x04Data\x18\x03 \x01(\fR\x04Data\"\x9b\x02\n" +
	"\x06Record\x12)\n" +
	"\aRawData\x18\x01 \x01(\v2\x0f.mproto.RawDataR\aRawData\x12\x18\n" +
	"\aAgentID\x18\x02 \x01(\tR\aAgentID\x12\x12\n" +
	"\x04Type\x18\x03 \x01(\x05R\x04Type\x12\x1e\n" +
	"\n" +
	"PublicIPv4\x18\x04 \x03(\tR\n" +
	"PublicIPv4\x12 \n" +
	"\vPrivateIPv4\x18\x05 \x03(\tR\vPrivateIPv4\x12\x1e\n" +
	"\n" +
	"PublicIPv6\x18\x06 \x03(\tR\n" +
	"PublicIPv6\x12 \n" +
	"\vPrivateIPv6\x18\a \x03(\tR\vPrivateIPv6\x12\x1a\n" +
	"\bHostname\x18\b \x01(\tR\bHostname\x12\x18\n" +
	"\aVersion\x18\t \x01(\tR\aVersion\"\xaf\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x16\n" +
	"\x06Status\x18\x02 \x01(\tR\x06Status\x12\x12\n" +
	"\x04Type\x18\x03 \x01(\x05R\x04Type\x120\n" +
	"\x06Params\x18\x04 \x03(\v2\x18.mproto.Task.ParamsEntryR\x06Params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x0128\n" +
	"\bTransfer\x12,\n" +
	"\bTransfer\x12\x0e.mproto.Record\x1a\f.mproto.Task(\x010\x01B,Z*github.com/colin-404/cloudog-common/mprotob\x06proto3"

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData []byte
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_proto_rawDesc), len(file_grpc_proto_rawDesc)))
	})
	return file_grpc_proto_rawDescData
}

var file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_grpc_proto_goTypes = []any{
	(*RawData)(nil), // 0: mproto.RawData
	(*Record)(nil),  // 1: mproto.Record
	(*Task)(nil),    // 2: mproto.Task
	nil,             // 3: mproto.Task.ParamsEntry
}
var file_grpc_proto_depIdxs = []int32{
	0, // 0: mproto.Record.RawData:type_name -> mproto.RawData
	3, // 1: mproto.Task.Params:type_name -> mproto.Task.ParamsEntry
	1, // 2: mproto.Transfer.Transfer:input_type -> mproto.Record
	2, // 3: mproto.Transfer.Transfer:output_type -> mproto.Task
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_proto_rawDesc), len(file_grpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}
